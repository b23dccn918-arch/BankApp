package com.mycompany.bankonline.Database.Transfer;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.mycompany.bankonline.Database.Connect;

public class TransferHandler {

    public String transferMoney(int senderAccountId, String recipientAccountNumber, double amount, String description) {
        try (Connection conn = Connect.getConnection()) {
            conn.setAutoCommit(false); // B·∫Øt ƒë·∫ßu transaction

            // üîπ L·∫•y th√¥ng tin ng∆∞·ªùi g·ª≠i
            String sqlSender = "SELECT account_id, balance FROM accounts WHERE account_id = ?";
            PreparedStatement psSender = conn.prepareStatement(sqlSender);
            psSender.setInt(1, senderAccountId);
            ResultSet rsSender = psSender.executeQuery();

            if (!rsSender.next()) {
                return "Kh√¥ng t√¨m th·∫•y t√†i kho·∫£n ng∆∞·ªùi g·ª≠i.";
            }

            double senderBalance = rsSender.getDouble("balance");

            // L·∫•y th√¥ng tin ng∆∞·ªùi nh·∫≠n
            String sqlRecipient = "SELECT account_id, balance FROM accounts WHERE account_number = ?";
            PreparedStatement psRecipient = conn.prepareStatement(sqlRecipient);
            psRecipient.setString(1, recipientAccountNumber);
            ResultSet rsRecipient = psRecipient.executeQuery();

            if (!rsRecipient.next()) {
                return "T√†i kho·∫£n ng∆∞·ªùi nh·∫≠n kh√¥ng t·ªìn t·∫°i.";
            }

            int recipientAccountId = rsRecipient.getInt("account_id");
            double recipientBalance = rsRecipient.getDouble("balance");

            //  Ki·ªÉm tra s·ªë d∆∞
            if (senderBalance < amount) {
                return "S·ªë d∆∞ kh√¥ng ƒë·ªß ƒë·ªÉ chuy·ªÉn ti·ªÅn.";
            }

            // C·∫≠p nh·∫≠t s·ªë d∆∞ ng∆∞·ªùi g·ª≠i
            PreparedStatement psUpdateSender = conn.prepareStatement(
                "UPDATE accounts SET balance = ? WHERE account_id = ?");
            psUpdateSender.setDouble(1, senderBalance - amount);
            psUpdateSender.setInt(2, senderAccountId);
            psUpdateSender.executeUpdate();

            // C·∫≠p nh·∫≠t s·ªë d∆∞ ng∆∞·ªùi nh·∫≠n
            PreparedStatement psUpdateRecipient = conn.prepareStatement(
                "UPDATE accounts SET balance = ? WHERE account_id = ?");
            psUpdateRecipient.setDouble(1, recipientBalance + amount);
            psUpdateRecipient.setInt(2, recipientAccountId);
            psUpdateRecipient.executeUpdate();

            // Ghi log giao d·ªãch
            PreparedStatement psLog = conn.prepareStatement(
                "INSERT INTO transactions (from_account_id, to_account_id, type, amount, description, created_at) " +
                "VALUES (?, ?, 'transfer', ?, ?, NOW())");
            psLog.setInt(1, senderAccountId);
            psLog.setInt(2, recipientAccountId);
            psLog.setDouble(3, amount);
            psLog.setString(4, description);
            psLog.executeUpdate();

            conn.commit(); //Ho√†n t·∫•t giao d·ªãch

            return "Success";

        } catch (SQLException e) {
            e.printStackTrace();
            return "L·ªói khi chuy·ªÉn ti·ªÅn: " + e.getMessage();
        }
    }
}

